name: Sillydev hosting

on:
  #push:
    #branches:
    #  - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: DISCORD_TOKEN
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install expect
      run: sudo apt-get install -y expect

    - name: Generate .env file
      run: |
        echo "DISCORD_TOKEN=${{ secrets.TOKEN }}" > .env
        echo "PREFIX="${{ vars.PREFIX }}"" >> .env
        echo "DISCORD_CHANNEL_ID=${{ vars.DISCORD_CHANNEL_ID }}" >> .env
        echo "HOST=${{ vars.HOST }}" >> .env
        echo "PORT=${{ vars.PORT }}" >> .env
        echo "MONGODB_URI=${{ secrets.MONGO_URI }}" >> .env
        echo "GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN}}" >> .env
        echo "GH_USERNAME=${{ vars.GH_USERNAME }}" >> .env
        echo "GH_REPO=${{ vars.GH_REPO }}" >> .env
    - name: Upload .env and run.sh via SFTP
      run: |
        echo "
        spawn sftp -oPort=2022 -o StrictHostKeyChecking=no ${{ vars.AZUNYAN_SERVER }}@${{ vars.SERVER_ADDRESS }}
        expect \"password:\"
        send \"${{ secrets.PASSWORD }}\r\"
        expect \"sftp>\"
        send \"put .env\r\"
        expect \"sftp>\"
        send \"put run.sh\r\"
        expect \"sftp>\"
        send \"bye\r\"
        " > sftp_script.exp
        expect -f sftp_script.exp

    - name: Restart server
      run: |
        curl "https://panel.sillydev.co.uk/api/client/servers/$(echo "${{ vars.AZUNYAN_SERVER }}" | rev | cut -c1-8 | rev)/power" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ secrets.STARTBOT_API }}' \
          -X POST \
          -d '{
          "signal": "restart"
        }'
